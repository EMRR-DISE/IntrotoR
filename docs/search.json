[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to R Training - July 2024",
    "section": "",
    "text": "Intro to R for DWR\nWelcome to the Intro to R class for the Department of Water Resources, 2024!\nFor the first time, this is not taught by outside consultants, but by your own colleagues here at the department.",
    "crumbs": [
      "Intro to R for DWR"
    ]
  },
  {
    "objectID": "code/Day1Intro.html",
    "href": "code/Day1Intro.html",
    "title": "1  Day 1 - an introduction",
    "section": "",
    "text": "1.1 R\nR is a flexible coding language that anyone can learn\nI am taking a lot of this tutorial from the e-book “Hands on Programing in R” https://rstudio-education.github.io/hopr/\nIsn’t R a language?\nYou may hear me speak of R in the third person. For example, I might say, “Tell R to do this” or “Tell R to do that”, but of course R can’t do anything; it is just a language. This way of speaking is shorthand for saying, “Tell your computer to do this by writing a command in the R language at the command line of your RStudio console.” Your computer, and not R, does the actual work.\nIs this shorthand confusing and slightly lazy to use? Yes. Do a lot of people use it? Everyone I know–probably because it is so convenient.\nRstudio - integrated development environment",
    "crumbs": [
      "Day 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Day 1 - an introduction</span>"
    ]
  },
  {
    "objectID": "code/Day1Intro.html#why-use-code",
    "href": "code/Day1Intro.html#why-use-code",
    "title": "1  Day 1 - an introduction",
    "section": "1.2 Why use code?",
    "text": "1.2 Why use code?\nThere is a very steep learning curve to R (or any coding language). You are likely to get frustrated when code doesn’t work. The first things you learn are probably things you could do easier and faster in Excel. So why bother?\n\nReproducibility. Your workflow will be documented and can be repeated quickly and easily. It is also easier to fix your mistakes because you can see exactly what you did in every step of the process!\nLarge datasets. The larger your dataset is, the more difficult it will be to analyze in Excel or other GUI-based programs.\nAdvanced statistical capabilities. You can go a lot further with tools like mixed models, multivariate analyses, machine learning, and population models that are impossible in Excel.\nHuge crowd-sourced base of packages and help. The R community is really what makes it special. Pretty much anything you want to do has probalby been done before, and there is a publicly available package to help you out.",
    "crumbs": [
      "Day 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Day 1 - an introduction</span>"
    ]
  },
  {
    "objectID": "code/Day1Intro.html#part-1-the-very-basics",
    "href": "code/Day1Intro.html#part-1-the-very-basics",
    "title": "1  Day 1 - an introduction",
    "section": "1.3 Part 1: The Very basics",
    "text": "1.3 Part 1: The Very basics\nOK, everyone, open Rstudio. Click on the new project button. A ‘project’ is basically an organized directory that has all of the data, code, and outputs for a particular work product. It’s especially useful once you start working on multiple files and reading in and out data and stuff, so it’s good to get in the habit of always working in a project. For now, choose a location for a folder that will contain all the work you want to do for this class. This folder is your “working directory”, meaning, the default location for loading inputs and writing outputs, scripts, etc.\n\nNow let’s take a look at your RStudio Screen. Go over the different panes and how to navigate and customize.\nThis should be in your console:\n\nNow go to File –&gt; new file –&gt; R script.\nThis will be your first R script. You will type things in the script, then transfer them to the console to run them. You can technically type directly into the console, but then you can’t save them, and that’s bad, so get into the habit of writing everything in your script.\n\n1.3.0.1 Comments\nAnother good habit to start early is commenting your code. Comments are indicated by hashtags #. They are parts of your script that don’t do anything, just give you information about what you intended in your code and why you did what you did. RStudio helpfully color-codes them for you.\nFor example:\n\n#This is my first R script\n\n#test out addition\n1+1\n\n[1] 2\n\n#use a funciton\nsum(c(1,1))\n\n[1] 2\n\n\n\n\n1.3.0.2 Running code\nFrom your script, you can hit the ‘Run’ icon in the top right corner to move a line of code from your script to your console.\nYou can also hit ctrl-enter to do the same thing.\nHighlight multiple lines of code to run more than one thing at once.\nThe “source” button at the top of the script runs the entire script at once without printing all the output. This is useful of you have a script that is mostly setup stuff or homemade functions.\nYou will notice that in the console all the lines of code you run start with a &gt;. If you have multiple lines of code strung together, there will be + at the start of the new lines until the end of the code. In an R script, you can break your code up into lines to make it all fit on your screen, so long as the parentheses line up.\nThe output does not start with a carrot or plus sign. (explain the brackets)\n\n\n1.3.0.3 Exercise\nNow your turn!\n\nUse comments to write a title, date, and your name at the top of the script.\nSave your script in your project working directory\nType 24/2 in your script\nRun the script\n\n\n\n1.3.1 Part 2: Objects and Assignment\nThe joy of coding is that you can quickly to a lot of things at once. So, if I had a dataset with temperatures in Fahrenheit that I want to convert to Celsius, we can use R to do that all at once.\nLet’s say our list of temperatures are: 72, 69, 57, 58, 71, 64, 65, 70, 59\nWe can use R like a calculator to convert each of these numbers\n\n(72-32)*5/9\n\n[1] 22.22222\n\n(69-32)*5/9\n\n[1] 20.55556\n\n(57-32)*5/9\n\n[1] 13.88889\n\n(58-32)*5/9\n\n[1] 14.44444\n\n(71-32)*5/9\n\n[1] 21.66667\n\n(64-32)*5/9\n\n[1] 17.77778\n\n(65-32)*5/9\n\n[1] 18.33333\n\n(70-32)*5/9\n\n[1] 21.11111\n\n(59-32)*5/9\n\n[1] 15\n\n\nBut that’s tedious. Instead, we can clump these numbers together into a vector and assign it to a variable.\nLet’s call our vector “temps”\n\ntemps &lt;- c(72, 69, 57, 58, 71, 64, 65, 70, 59)\n\ntemps\n\n[1] 72 69 57 58 71 64 65 70 59\n\n\nThe &lt;- is called the “assignment operator”. You can also use = to do the same thing. The c is short for “concatenate”, which means “stick all these things together”. We now have an object temps that is a vector of values. Type “temps” into your console.\nWe can then perform operations on the whole vector of values at once. For example\n\n(temps-32)*5/9\n\n[1] 22.22222 20.55556 13.88889 14.44444 21.66667 17.77778 18.33333 21.11111\n[9] 15.00000\n\n\nIf we want to save that output, we need to assign it to a new variable\n\ntemps_C &lt;- (temps-32)*5/9\n\nNote that this doesn’t give you any output, it just assigns a value to temps_C. If we want to see what temps_C is, we need to print it out.\n\ntemps_C\n\n[1] 22.22222 20.55556 13.88889 14.44444 21.66667 17.77778 18.33333 21.11111\n[9] 15.00000\n\n\nIf you want to print it as you make the assignment, you can put parentheses around it.\n\n(temps_C2 &lt;- temps_C*2)\n\n[1] 44.44444 41.11111 27.77778 28.88889 43.33333 35.55556 36.66667 42.22222\n[9] 30.00000\n\n\nYou’ll also notice that in the Environment tab in your Rstudio window you should now have temps and temps_C. You can click on them to see them.\n\n1.3.1.1 Exercise\nConvert these numbers from miles per hour to meters per second. (use assignment)\n21, 25, 100, 50, 36, 72, 15\n\n\n1.3.1.2 Type of objects\nWe can call temps and temps_C objects. Specifically, they are numeric vectors. Let’s go through some different types of objects.\n\nScalars - single value\nVectors - list if values (one dimensional)\nMatrices - values in rows and columns, all the same type (two dimensional)\nArrays - multiple matrices stacked up (three-dimensional)\nData Frames - Data of different types in rows and columns, where all columns are the same length and all rows are the same width.\nLists - data of different types and different lengths in rows and columns.\n\n\n\n1.3.1.3 Data classes\n\nnumeric - Numbers (duh), these can be integers, real numbers, etc.\ncharacter - Any sequence of letters and numbers\nlogical - TRUE/FALSE (always in all caps)\nfactor - Catigorical variables that take a limited set of values. May be ordered (like water year types), or unordered (like families of fishes)\ndate/time classes (giant can of worms)\n\nUsing class and str to get info about objects. also View and head.\n\nfoo &lt;- \"Cat\"\ndog &lt;- 24\n\nclass(foo)\n\n[1] \"character\"\n\nstr(foo)\n\n chr \"Cat\"\n\nclass(dog)\n\n[1] \"numeric\"\n\nfoo2 = c(\"Cat\", \"dog\", \"Mouse\", \"Squirrel\")\nstr(foo2)\n\n chr [1:4] \"Cat\" \"dog\" \"Mouse\" \"Squirrel\"\n\n\n\n\n\n1.3.2 Functions\nFunctions are little sequences of code that do something useful. There are lots of built-in functions, plus you can define your own functions when you get a little more practice.\nThe basic structure is:\nfunction(arguments)\nwhere “arguments” are the inputs to your function.\nThe parentheses are the “trigger” that tells R to run the function. Typing the name of the function without the parentheses prints the code in the function. And you can write your own when you get good.\n\n#when we calculated the sum of 1 +1, that was a function\n\nsum(1+1)\n\n[1] 2\n\nsum\n\nfunction (..., na.rm = FALSE)  .Primitive(\"sum\")\n\n#mean is another useful function\nmean(c(1+2+3+4))\n\n[1] 10\n\n\nNotice that as you start typing the function, a box pops up in RStudio that prompts you with the arguments you might want to use.\n\n1.3.2.1 Exercise\nSee if you can use use these functions\n\nmean - calculate the mean of 23, 24, 15, 12, 53, 23,1, 45\nsum - calculate the sum of all numbers below 50\n\nHint! You can ask for a sequence of numbers with a : between the first and last number.\n\nabs (absolute value)\nlog - default is ln, not log10\nround - can specify decimal places\nexp (exponent)",
    "crumbs": [
      "Day 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Day 1 - an introduction</span>"
    ]
  },
  {
    "objectID": "code/Day1Intro.html#part-3-packages",
    "href": "code/Day1Intro.html#part-3-packages",
    "title": "1  Day 1 - an introduction",
    "section": "1.4 Part 3: Packages",
    "text": "1.4 Part 3: Packages\nThe real benefit of R is that it is open-source, and tons and tons of people have developed ‘expansion packs’ for R. You can go a very long way with just the built-in R functions, but many people have developed slightly different ways of doing things, easier methods, and more advanced things.\nLet’s go over to the R website and talk packages - https://www.r-project.org/\nWe had everyone install the tidyverse packages before getting started. This is actually a set of packages that all work together to make code a little more intuitive. Let’s go over to the “Packages” tab in RStudio and check them out.\n\ndplyr - data manipulation\nlubridate - dates and times\nggplot2 - graphics\ntidyr - more data manipulation\nforcats - working with categorical variables (factors)\nreadr - importing data from spreadsheets\nstringr - working with character strings\ntibble - nicer checking and formatting for tables and data frames\n\nYou’ll notice that besides the tidyverse, there are a number of other packages in this tab that you didn’t install - they came along with base R.\nWhen you want to install or update packages, you can use the install.packages command, or the GUI in RStudio. This command reaches out to You only have to do this once. However, at the start of every R session you will need to load the package into your environment using the library command. This is usually done at the top of your script\n\n#load required libraries\nlibrary(readr)\n\nWarning: package 'readr' was built under R version 4.4.0\n\n#check out documentation\n?readr\n\nstarting httpd help server ... done\n\n#Click on the index, then one of the vignettes - those are very useful!\n\n\n1.4.0.1 Package conflicts\nAfter you’ve loaded a package, you might get some warnings about conflicted packages. These are different functions with the same name in two different packages. Mostly it isn’t a problem, but sometimes you’ll have to specify which function you mean.\nSpecify which you want with package::function\n\nlibrary(lubridate)\n\nWarning: package 'lubridate' was built under R version 4.4.0\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nIf you really want the base version instead of the one from a package, you can use the exclude argument.\n\n#remove the lubrdate library we just installed\ndetach(\"package:lubridate\")\n\n#now reinstall with the exclusion\nlibrary(lubridate, exclude = \"date\")\n\nWarning: package 'lubridate' was built under R version 4.4.0\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\n\n\n\n1.4.0.2 Exercise\nLet’s try using a function that is in a package. glimpse is an simple function that tells you about a data frame. R has a number of built-in data sets that you can play with, and one is mtcars. It’s just a table of different makes and models of cars and their stats.\n\n#The View function is built in. \nView(mtcars)\n\n#the \"glimpse\" function is in the dplyr package. It's part of the tidyverse set of packages. You should have installed it already\nglimpse(mtcars)\n\nError in glimpse(mtcars): could not find function \"glimpse\"\n\n#even though you installed it, you still need to load it using the library command.\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.4.0\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n?dplyr\n\nglimpse(mtcars)\n\nRows: 32\nColumns: 11\n$ mpg  &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…\n\n\nNow go to the documentation for dplyr and look through the “Introduction to dplyr” vignette. Take 15 mins and see if you try out some of the examples. We’ll be using a lot of these dplyr functions later in the class.\n\nvignette(\"dplyr\")",
    "crumbs": [
      "Day 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Day 1 - an introduction</span>"
    ]
  },
  {
    "objectID": "code/Day1Intro.html#part-4-errors-and-getting-help",
    "href": "code/Day1Intro.html#part-4-errors-and-getting-help",
    "title": "1  Day 1 - an introduction",
    "section": "1.5 Part 4: Errors and Getting Help",
    "text": "1.5 Part 4: Errors and Getting Help\nOne of the most frustrating parts of coding is errors. Your computer is very good at doing exactly what you tell it to, but that might not be what you want.\n\ndates = c(\"Monday\", \"Tuesday\", \"Wednesday\")\n\ndate[1]\n\nError in date[1]: object of type 'closure' is not subsettable\n\ntest = filter(mtcars, gear = 4)\n\nError in `filter()`:\n! We detected a named input.\nℹ This usually means that you've used `=` instead of `==`.\nℹ Did you mean `gear == 4`?\n\n\nThis is one of my least favorite error messages. What the heck does that even mean?\nIt turns out we accidentally typed date instead of dates, and date is a reserved term in R, so it was trying to subset a word that designates a data type and everyone was confused. But don’t worry! It gets worse.\nEveryone has trouble interpreting error messages at first. Fortunately, error messages are improving, and you will get better at understanding them.\nAnother thing to know is that not all red text is errors. Some are warnings. Don’t worry about what this code does for now, just see what the output looks like.\n\nmtcars[1,1] = NA \n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.4.0\n\nggplot(mtcars, aes(x = mpg, y = hp))+ geom_point()+ geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n#everything still ran, but it gave to a warning to let you know something did not go as planned\n\nWe also sometimes get messages, which are usually not even red.\n\n#don't worry about what this code does for now, just notice that we get a message telling you what it decided to use for the smoothing term.\nggplot(mtcars, aes(x = mpg, y = hp))+ geom_point()+ geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nThe first thing to learn, is how to read the documentation for a function.\n\n?mean\n\nThe documentation has a few standard parts\n\nfunction and package in curly brackets at top\nTitle\nDescription- Frequently not all that helpful, but sometimes useful\nUsage (Function and arguments)\nArguments - description of what all the arguments should contain\nValue - output\nReferences - articles or more info\nSee Also - similar functions or functions you might want if you want this one\nExamples - THE MOST USEFUL PART!\n\n\n1.5.1 Online help options\n\nhttps://rseek.org/\nhttps://chatgpt.com/\nhttps://posit.co/resources/cheatsheets/\n\n\n\n\n1.5.2 Closing for the day\nHow to save your workspace image.\n\nsave.image()\n#also little save icon on environment\n\nHow to clear your workspace.\n\nrm(list = ls())\n#also little broom icon on the environment",
    "crumbs": [
      "Day 1",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Day 1 - an introduction</span>"
    ]
  },
  {
    "objectID": "code/Day4_01_Outline.html",
    "href": "code/Day4_01_Outline.html",
    "title": "Day 4 - Outline",
    "section": "",
    "text": "Summarizing Data\n\nBasic Summarizing\nGrouping\nOPTIONAL: Using across\n\nReshaping Data\n\nBasics of Data Structure\nConverting between Data Structures\nSummarize and Reshape\n\nJoins and Binds\n\nDifferences and Usage\nBind Rows\nJoin Basics\nLeft Join\n\nOpen Questions??\nFinal Course Exercise\n\nMaybe have people work in pairs, Dave show solution at end (30 min)",
    "crumbs": [
      "Day 4 - Outline"
    ]
  },
  {
    "objectID": "code/Day4_02_Summarizing.html",
    "href": "code/Day4_02_Summarizing.html",
    "title": "\n2  Summarizing Data\n",
    "section": "",
    "text": "2.1 Import Data\nLoad packages and import EMP water quality data.\nlibrary(tidyverse)\nlibrary(here)\ndf_wq &lt;- read_csv(here(\"data/WQ_P8D7.csv\"))\nglimpse(df_wq)\n\nRows: 62\nColumns: 20\n$ Station            &lt;chr&gt; \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8…\n$ Date               &lt;date&gt; 2020-01-16, 2020-01-22, 2020-02-14, 2020-02-20, 20…\n$ Chla               &lt;dbl&gt; 0.64, 0.67, 1.46, 2.15, 1.40, 1.89, 4.73, 1.74, 6.4…\n$ Pheophytin         &lt;dbl&gt; 0.50, 0.87, 0.69, 0.50, 0.56, 1.13, 1.25, 0.89, 0.8…\n$ TotAlkalinity      &lt;dbl&gt; 98.0, 82.0, 81.0, 86.0, 80.0, 93.0, 59.0, 78.0, 63.…\n$ DissAmmonia        &lt;dbl&gt; 0.150, 0.210, 0.250, 0.140, 0.110, 0.220, 0.050, 0.…\n$ DissNitrateNitrite &lt;dbl&gt; 2.800, 0.490, 1.700, 0.480, 1.600, 0.380, 1.070, 0.…\n$ DOC                &lt;dbl&gt; 3.90, 0.27, 2.80, 0.39, 2.00, 0.19, 2.80, 1.20, 3.1…\n$ TOC                &lt;dbl&gt; 4.10, 0.32, 2.50, 0.41, 2.10, 0.20, 2.80, 1.20, 3.1…\n$ DON                &lt;dbl&gt; NA, NA, NA, NA, NA, NA, 0.30, 0.20, 0.30, 0.10, 0.5…\n$ TotPhos            &lt;dbl&gt; 0.310, 0.082, 0.130, 0.130, 0.190, 0.100, 0.188, 0.…\n$ DissOrthophos      &lt;dbl&gt; 0.200, 0.071, 0.130, 0.065, 0.140, 0.082, 0.177, 0.…\n$ TDS                &lt;dbl&gt; 380, 9500, 340, 5800, 290, 8700, 280, 7760, 227, 11…\n$ TSS                &lt;dbl&gt; 8.9, 38.0, 2.2, 18.0, 1.4, 28.0, 6.6, 35.6, 5.3, 23…\n$ TKN                &lt;dbl&gt; 0.520, 0.480, 0.430, 0.250, 0.400, 0.200, 0.400, 0.…\n$ Depth              &lt;dbl&gt; 28.9, 18.8, 39.0, 7.1, 39.0, 7.2, 37.1, 5.2, 36.7, …\n$ Secchi             &lt;dbl&gt; 116, 30, 212, 52, 340, 48, 100, 40, 160, 44, 120, 6…\n$ Microcystis        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 3, 2, 3, 2, 4, 2, 3, 2, 2, 1, 1, …\n$ SpCndSurface       &lt;dbl&gt; 667, 15532, 647, 11369, 530, 16257, 503, 12946, 404…\n$ WTSurface          &lt;dbl&gt; 9.67, 9.97, 11.09, 12.51, 13.97, 13.81, 23.46, 21.1…",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summarizing Data</span>"
    ]
  },
  {
    "objectID": "code/Day4_02_Summarizing.html#basic-summarizing",
    "href": "code/Day4_02_Summarizing.html#basic-summarizing",
    "title": "\n2  Summarizing Data\n",
    "section": "\n2.2 Basic Summarizing",
    "text": "2.2 Basic Summarizing\n\n# Simple overall summary statistics of entire data frame\nsummary(df_wq)\n\n   Station               Date                 Chla          Pheophytin   \n Length:62          Min.   :2020-01-16   Min.   : 0.500   Min.   :0.500  \n Class :character   1st Qu.:2020-10-19   1st Qu.: 1.530   1st Qu.:0.830  \n Mode  :character   Median :2021-09-13   Median : 2.515   Median :1.115  \n                    Mean   :2021-08-12   Mean   : 3.042   Mean   :1.350  \n                    3rd Qu.:2022-05-16   3rd Qu.: 4.188   3rd Qu.:1.472  \n                    Max.   :2022-12-19   Max.   :16.510   Max.   :6.130  \n                                                                         \n TotAlkalinity     DissAmmonia      DissNitrateNitrite      DOC       \n Min.   : 46.40   Min.   :0.05000   Min.   :0.1600     Min.   :0.190  \n 1st Qu.: 77.03   1st Qu.:0.05000   1st Qu.:0.3337     1st Qu.:1.600  \n Median : 84.60   Median :0.06850   Median :0.6830     Median :2.400  \n Mean   : 82.28   Mean   :0.09485   Mean   :1.2140     Mean   :2.751  \n 3rd Qu.: 90.95   3rd Qu.:0.11675   3rd Qu.:1.7150     3rd Qu.:3.700  \n Max.   :116.00   Max.   :0.29900   Max.   :5.4700     Max.   :9.500  \n                                                                      \n      TOC             DON            TotPhos       DissOrthophos   \n Min.   :0.200   Min.   :0.1000   Min.   :0.0820   Min.   :0.0650  \n 1st Qu.:1.500   1st Qu.:0.1900   1st Qu.:0.1190   1st Qu.:0.0930  \n Median :2.350   Median :0.2500   Median :0.1525   Median :0.1100  \n Mean   :2.734   Mean   :0.2827   Mean   :0.2052   Mean   :0.1837  \n 3rd Qu.:3.675   3rd Qu.:0.3500   3rd Qu.:0.2893   3rd Qu.:0.2838  \n Max.   :9.100   Max.   :1.0700   Max.   :0.4900   Max.   :0.4740  \n                 NA's   :6                                         \n      TDS               TSS               TKN             Depth      \n Min.   :  152.0   Min.   :  1.400   Min.   :0.1490   Min.   : 5.20  \n 1st Qu.:  307.5   1st Qu.:  4.575   1st Qu.:0.3020   1st Qu.: 6.20  \n Median : 2169.0   Median : 13.100   Median :0.3950   Median :12.80  \n Mean   : 5819.7   Mean   : 26.906   Mean   :0.4295   Mean   :21.18  \n 3rd Qu.:12125.0   3rd Qu.: 39.500   3rd Qu.:0.5222   3rd Qu.:37.33  \n Max.   :15800.0   Max.   :105.000   Max.   :1.4400   Max.   :42.00  \n                                                                     \n     Secchi        Microcystis     SpCndSurface       WTSurface    \n Min.   : 20.00   Min.   :1.000   Min.   :  278.0   Min.   : 9.06  \n 1st Qu.: 40.00   1st Qu.:1.000   1st Qu.:  548.8   1st Qu.:13.51  \n Median : 68.00   Median :1.000   Median : 3714.0   Median :19.05  \n Mean   : 93.49   Mean   :1.548   Mean   : 9771.1   Mean   :18.18  \n 3rd Qu.:144.00   3rd Qu.:2.000   3rd Qu.:20329.0   3rd Qu.:22.11  \n Max.   :340.00   Max.   :4.000   Max.   :25278.0   Max.   :27.01  \n NA's   :1                                                         \n\n# Summary of one column\nsummary(df_wq$Chla)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.500   1.530   2.515   3.042   4.188  16.510 \n\n\n\n# Calculate overall mean of one column\ndf_wq %&gt;% summarize(mean_Chla = mean(Chla))\n\n# A tibble: 1 × 1\n  mean_Chla\n      &lt;dbl&gt;\n1      3.04\n\n# Calculate overall mean of multiple columns\ndf_wq %&gt;% summarize(mean_Chla = mean(Chla), mean_Pheo = mean(Pheophytin))\n\n# A tibble: 1 × 2\n  mean_Chla mean_Pheo\n      &lt;dbl&gt;     &lt;dbl&gt;\n1      3.04      1.35\n\n\nShow how to deal with NA values - DON\n\n2.2.1 Exercise",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summarizing Data</span>"
    ]
  },
  {
    "objectID": "code/Day4_02_Summarizing.html#grouping",
    "href": "code/Day4_02_Summarizing.html#grouping",
    "title": "\n2  Summarizing Data\n",
    "section": "\n2.3 Grouping",
    "text": "2.3 Grouping\n\n# Group by Station\ndf_wq %&gt;% group_by(Station) %&gt;% summarize(mean_Chla = mean(Chla))\n\n# A tibble: 2 × 2\n  Station mean_Chla\n  &lt;chr&gt;       &lt;dbl&gt;\n1 D7           2.71\n2 P8           3.37\n\n\n\n# Calculate more than one summary statistic within `summarize`\ndf_wq %&gt;% \n  group_by(Station) %&gt;% \n  summarize(\n    min_Chla = min(Chla),\n    mean_Chla = mean(Chla),\n    median_Chla = median(Chla),\n    max_Chla = max(Chla),\n    sd_Chla = sd(Chla)\n  )\n\n# A tibble: 2 × 6\n  Station min_Chla mean_Chla median_Chla max_Chla sd_Chla\n  &lt;chr&gt;      &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 D7          0.5       2.71        2.21     7.36    1.81\n2 P8          0.57      3.37        2.67    16.5     2.92\n\n\n\n# Adding a second grouping variable for year\ndf_wq_c &lt;- df_wq %&gt;% mutate(Year = year(Date))\n\ndf_wq_c %&gt;% \n  group_by(Station, Year) %&gt;% \n  summarize(\n    min_Chla = min(Chla),\n    mean_Chla = mean(Chla),\n    median_Chla = median(Chla),\n    max_Chla = max(Chla),\n    sd_Chla = sd(Chla)\n  )\n\n# A tibble: 6 × 7\n# Groups:   Station [2]\n  Station  Year min_Chla mean_Chla median_Chla max_Chla sd_Chla\n  &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 D7       2020     0.5       1.53        1.74     2.79   0.749\n2 D7       2021     1.17      3.58        3.12     6.76   1.97 \n3 D7       2022     0.67      2.88        2.51     7.36   1.87 \n4 P8       2020     0.64      4.48        2.81    16.5    4.88 \n5 P8       2021     1.25      3.18        3.24     5.56   1.57 \n6 P8       2022     0.57      2.70        2.58     5.24   1.54 \n\n\n\n# Always best practice to ungroup data after finished with operation\ndf_wq_c %&gt;% \n  group_by(Station, Year) %&gt;% \n  summarize(\n    min_Chla = min(Chla),\n    mean_Chla = mean(Chla),\n    median_Chla = median(Chla),\n    max_Chla = max(Chla),\n    sd_Chla = sd(Chla)\n  ) %&gt;% \n  ungroup()\n\n# A tibble: 6 × 7\n  Station  Year min_Chla mean_Chla median_Chla max_Chla sd_Chla\n  &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 D7       2020     0.5       1.53        1.74     2.79   0.749\n2 D7       2021     1.17      3.58        3.12     6.76   1.97 \n3 D7       2022     0.67      2.88        2.51     7.36   1.87 \n4 P8       2020     0.64      4.48        2.81    16.5    4.88 \n5 P8       2021     1.25      3.18        3.24     5.56   1.57 \n6 P8       2022     0.57      2.70        2.58     5.24   1.54 \n\n\n\n# It's possible to group data within `summarize`\ndf_wq_c %&gt;% \n  summarize(\n    min_Chla = min(Chla),\n    mean_Chla = mean(Chla),\n    median_Chla = median(Chla),\n    max_Chla = max(Chla),\n    sd_Chla = sd(Chla),\n    .by = c(Station, Year)\n  ) \n\n# A tibble: 6 × 7\n  Station  Year min_Chla mean_Chla median_Chla max_Chla sd_Chla\n  &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n1 P8       2020     0.64      4.48        2.81    16.5    4.88 \n2 D7       2020     0.5       1.53        1.74     2.79   0.749\n3 P8       2021     1.25      3.18        3.24     5.56   1.57 \n4 D7       2021     1.17      3.58        3.12     6.76   1.97 \n5 D7       2022     0.67      2.88        2.51     7.36   1.87 \n6 P8       2022     0.57      2.70        2.58     5.24   1.54 \n\n\n\n2.3.1 Exercise",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summarizing Data</span>"
    ]
  },
  {
    "objectID": "code/Day4_02_Summarizing.html#optional-using-across",
    "href": "code/Day4_02_Summarizing.html#optional-using-across",
    "title": "\n2  Summarizing Data\n",
    "section": "\n2.4 OPTIONAL: Using across\n",
    "text": "2.4 OPTIONAL: Using across\n\n\ndf_wq_c %&gt;% \n  group_by(Station, Year) %&gt;% \n  summarize(across(c(DissAmmonia, DissNitrateNitrite, DissOrthophos), max)) %&gt;% \n  ungroup()\n\n# A tibble: 6 × 5\n  Station  Year DissAmmonia DissNitrateNitrite DissOrthophos\n  &lt;chr&gt;   &lt;dbl&gt;       &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;\n1 D7       2020       0.22               0.49          0.103\n2 D7       2021       0.192              0.526         0.103\n3 D7       2022       0.145              0.656         0.113\n4 P8       2020       0.25               3.25          0.474\n5 P8       2021       0.299              3.58          0.455\n6 P8       2022       0.29               5.47          0.456\n\n\n\ndf_wq_c %&gt;% \n  group_by(Station, Year) %&gt;% \n  summarize(\n    across(\n      c(DissAmmonia, DissNitrateNitrite, DissOrthophos), \n      list(min = min, max = max)\n    )\n  ) %&gt;% \n  ungroup()\n\n# A tibble: 6 × 8\n  Station  Year DissAmmonia_min DissAmmonia_max DissNitrateNitrite_min\n  &lt;chr&gt;   &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;                  &lt;dbl&gt;\n1 D7       2020            0.05           0.22                   0.23 \n2 D7       2021            0.05           0.192                  0.179\n3 D7       2022            0.05           0.145                  0.16 \n4 P8       2020            0.05           0.25                   0.71 \n5 P8       2021            0.05           0.299                  1.08 \n6 P8       2022            0.05           0.29                   0.8  \n# ℹ 3 more variables: DissNitrateNitrite_max &lt;dbl&gt;, DissOrthophos_min &lt;dbl&gt;,\n#   DissOrthophos_max &lt;dbl&gt;\n\n\n\ndf_wq_c %&gt;% \n  group_by(Station, Year) %&gt;% \n  summarize(across(starts_with(\"Diss\"), list(min = min, max = max))) %&gt;% \n  ungroup()\n\n# A tibble: 6 × 8\n  Station  Year DissAmmonia_min DissAmmonia_max DissNitrateNitrite_min\n  &lt;chr&gt;   &lt;dbl&gt;           &lt;dbl&gt;           &lt;dbl&gt;                  &lt;dbl&gt;\n1 D7       2020            0.05           0.22                   0.23 \n2 D7       2021            0.05           0.192                  0.179\n3 D7       2022            0.05           0.145                  0.16 \n4 P8       2020            0.05           0.25                   0.71 \n5 P8       2021            0.05           0.299                  1.08 \n6 P8       2022            0.05           0.29                   0.8  \n# ℹ 3 more variables: DissNitrateNitrite_max &lt;dbl&gt;, DissOrthophos_min &lt;dbl&gt;,\n#   DissOrthophos_max &lt;dbl&gt;",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summarizing Data</span>"
    ]
  },
  {
    "objectID": "code/Day4_03_Reshaping.html",
    "href": "code/Day4_03_Reshaping.html",
    "title": "\n3  Reshaping Data\n",
    "section": "",
    "text": "3.1 Basics of Data Structure\nImage Credit: https://www.statology.org/long-vs-wide-data/",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reshaping Data</span>"
    ]
  },
  {
    "objectID": "code/Day4_03_Reshaping.html#converting-between-data-structures",
    "href": "code/Day4_03_Reshaping.html#converting-between-data-structures",
    "title": "\n3  Reshaping Data\n",
    "section": "\n3.2 Converting between Data Structures",
    "text": "3.2 Converting between Data Structures\n\ndf_wq_nutr &lt;- df_wq %&gt;% \n  select(Station, Date, DissAmmonia, DissNitrateNitrite, DissOrthophos)\n\ndf_wq_nutr\n\n# A tibble: 62 × 5\n   Station Date       DissAmmonia DissNitrateNitrite DissOrthophos\n   &lt;chr&gt;   &lt;date&gt;           &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;\n 1 P8      2020-01-16        0.15               2.8          0.2  \n 2 D7      2020-01-22        0.21               0.49         0.071\n 3 P8      2020-02-14        0.25               1.7          0.13 \n 4 D7      2020-02-20        0.14               0.48         0.065\n 5 P8      2020-03-03        0.11               1.6          0.14 \n 6 D7      2020-03-06        0.22               0.38         0.082\n 7 P8      2020-06-11        0.05               1.07         0.177\n 8 D7      2020-06-17        0.05               0.4          0.095\n 9 P8      2020-07-13        0.05               0.71         0.171\n10 D7      2020-07-16        0.05               0.32         0.093\n# ℹ 52 more rows\n\n\n\n3.2.1 “Wide” to “Long”\n\ndf_wq_nutr_long &lt;- df_wq_nutr %&gt;% \n  pivot_longer(\n    cols = c(DissAmmonia, DissNitrateNitrite, DissOrthophos),\n    names_to = \"Parameter\",\n    values_to = \"Value\"\n  )\n\nprint(df_wq_nutr_long, n = 30)\n\n# A tibble: 186 × 4\n   Station Date       Parameter          Value\n   &lt;chr&gt;   &lt;date&gt;     &lt;chr&gt;              &lt;dbl&gt;\n 1 P8      2020-01-16 DissAmmonia        0.15 \n 2 P8      2020-01-16 DissNitrateNitrite 2.8  \n 3 P8      2020-01-16 DissOrthophos      0.2  \n 4 D7      2020-01-22 DissAmmonia        0.21 \n 5 D7      2020-01-22 DissNitrateNitrite 0.49 \n 6 D7      2020-01-22 DissOrthophos      0.071\n 7 P8      2020-02-14 DissAmmonia        0.25 \n 8 P8      2020-02-14 DissNitrateNitrite 1.7  \n 9 P8      2020-02-14 DissOrthophos      0.13 \n10 D7      2020-02-20 DissAmmonia        0.14 \n11 D7      2020-02-20 DissNitrateNitrite 0.48 \n12 D7      2020-02-20 DissOrthophos      0.065\n13 P8      2020-03-03 DissAmmonia        0.11 \n14 P8      2020-03-03 DissNitrateNitrite 1.6  \n15 P8      2020-03-03 DissOrthophos      0.14 \n16 D7      2020-03-06 DissAmmonia        0.22 \n17 D7      2020-03-06 DissNitrateNitrite 0.38 \n18 D7      2020-03-06 DissOrthophos      0.082\n19 P8      2020-06-11 DissAmmonia        0.05 \n20 P8      2020-06-11 DissNitrateNitrite 1.07 \n21 P8      2020-06-11 DissOrthophos      0.177\n22 D7      2020-06-17 DissAmmonia        0.05 \n23 D7      2020-06-17 DissNitrateNitrite 0.4  \n24 D7      2020-06-17 DissOrthophos      0.095\n25 P8      2020-07-13 DissAmmonia        0.05 \n26 P8      2020-07-13 DissNitrateNitrite 0.71 \n27 P8      2020-07-13 DissOrthophos      0.171\n28 D7      2020-07-16 DissAmmonia        0.05 \n29 D7      2020-07-16 DissNitrateNitrite 0.32 \n30 D7      2020-07-16 DissOrthophos      0.093\n# ℹ 156 more rows\n\n\n\n3.2.2 “Long” to “Wide”\n\ndf_wq_nutr_wide &lt;- df_wq_nutr_long %&gt;% \n  pivot_wider(names_from = Parameter, values_from = Value)\n\ndf_wq_nutr_wide\n\n# A tibble: 62 × 5\n   Station Date       DissAmmonia DissNitrateNitrite DissOrthophos\n   &lt;chr&gt;   &lt;date&gt;           &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;\n 1 P8      2020-01-16        0.15               2.8          0.2  \n 2 D7      2020-01-22        0.21               0.49         0.071\n 3 P8      2020-02-14        0.25               1.7          0.13 \n 4 D7      2020-02-20        0.14               0.48         0.065\n 5 P8      2020-03-03        0.11               1.6          0.14 \n 6 D7      2020-03-06        0.22               0.38         0.082\n 7 P8      2020-06-11        0.05               1.07         0.177\n 8 D7      2020-06-17        0.05               0.4          0.095\n 9 P8      2020-07-13        0.05               0.71         0.171\n10 D7      2020-07-16        0.05               0.32         0.093\n# ℹ 52 more rows\n\n\n\n3.2.3 Exercise",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reshaping Data</span>"
    ]
  },
  {
    "objectID": "code/Day4_03_Reshaping.html#summarize-and-reshape",
    "href": "code/Day4_03_Reshaping.html#summarize-and-reshape",
    "title": "\n3  Reshaping Data\n",
    "section": "\n3.3 Summarize and Reshape",
    "text": "3.3 Summarize and Reshape\n\ndf_wq %&gt;% \n  mutate(Month = month(Date, label = TRUE)) %&gt;% \n  summarize(Chla = mean(Chla), .by = c(Station, Month)) %&gt;% \n  pivot_wider(names_from = Station, values_from = Chla)\n\n# A tibble: 12 × 3\n   Month    P8    D7\n   &lt;ord&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Jan   0.605  0.67\n 2 Feb   1.17   2.90\n 3 Mar   1.61   4.04\n 4 Jun   4.47   4.44\n 5 Jul   5.31   3.94\n 6 Aug   8.73   3.30\n 7 Sep   4.1    1.89\n 8 Oct   2.42   1.96\n 9 Nov   1.63   1.49\n10 Apr   3.08   2.90\n11 May   3.7    2.3 \n12 Dec   1.27   1.69\n\n\n\n3.3.1 Exercise\nDo the same summarize and reshape as above but calculate annual maximums of TDS for each station\n\ndf_wq %&gt;% \n  mutate(Year = year(Date)) %&gt;% \n  summarize(TDS = max(TDS), .by = c(Station, Year)) %&gt;% \n  pivot_wider(names_from = Station, values_from = TDS)\n\n# A tibble: 3 × 3\n   Year    P8    D7\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2020   380 14400\n2  2021   578 15800\n3  2022   453 13700",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reshaping Data</span>"
    ]
  },
  {
    "objectID": "code/Day4_04_Joins&Binds.html",
    "href": "code/Day4_04_Joins&Binds.html",
    "title": "\n4  Joins and Binds\n",
    "section": "",
    "text": "4.1 Differences between them\nBinding rows or columns from two dataframes:\nJoining two dataframes with a left_join():\nImage Credit: https://stat545.stat.ubc.ca/tutorials/tibble_join/",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Joins and Binds</span>"
    ]
  },
  {
    "objectID": "code/Day4_04_Joins&Binds.html#bind-rows",
    "href": "code/Day4_04_Joins&Binds.html#bind-rows",
    "title": "\n4  Joins and Binds\n",
    "section": "\n4.2 Bind rows",
    "text": "4.2 Bind rows\nImport additional WQ data collected in 2019 at P8 and D7\n\ndf_wq_2019 &lt;- read_csv(here(\"data/WQ_2019.csv\"))\n\nLook at structure of both dataframes to bind\n\n# 2020-2022 data:\nglimpse(df_wq)\n\nRows: 62\nColumns: 20\n$ Station            &lt;chr&gt; \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8…\n$ Date               &lt;date&gt; 2020-01-16, 2020-01-22, 2020-02-14, 2020-02-20, 20…\n$ Chla               &lt;dbl&gt; 0.64, 0.67, 1.46, 2.15, 1.40, 1.89, 4.73, 1.74, 6.4…\n$ Pheophytin         &lt;dbl&gt; 0.50, 0.87, 0.69, 0.50, 0.56, 1.13, 1.25, 0.89, 0.8…\n$ TotAlkalinity      &lt;dbl&gt; 98.0, 82.0, 81.0, 86.0, 80.0, 93.0, 59.0, 78.0, 63.…\n$ DissAmmonia        &lt;dbl&gt; 0.150, 0.210, 0.250, 0.140, 0.110, 0.220, 0.050, 0.…\n$ DissNitrateNitrite &lt;dbl&gt; 2.800, 0.490, 1.700, 0.480, 1.600, 0.380, 1.070, 0.…\n$ DOC                &lt;dbl&gt; 3.90, 0.27, 2.80, 0.39, 2.00, 0.19, 2.80, 1.20, 3.1…\n$ TOC                &lt;dbl&gt; 4.10, 0.32, 2.50, 0.41, 2.10, 0.20, 2.80, 1.20, 3.1…\n$ DON                &lt;dbl&gt; NA, NA, NA, NA, NA, NA, 0.30, 0.20, 0.30, 0.10, 0.5…\n$ TotPhos            &lt;dbl&gt; 0.310, 0.082, 0.130, 0.130, 0.190, 0.100, 0.188, 0.…\n$ DissOrthophos      &lt;dbl&gt; 0.200, 0.071, 0.130, 0.065, 0.140, 0.082, 0.177, 0.…\n$ TDS                &lt;dbl&gt; 380, 9500, 340, 5800, 290, 8700, 280, 7760, 227, 11…\n$ TSS                &lt;dbl&gt; 8.9, 38.0, 2.2, 18.0, 1.4, 28.0, 6.6, 35.6, 5.3, 23…\n$ TKN                &lt;dbl&gt; 0.520, 0.480, 0.430, 0.250, 0.400, 0.200, 0.400, 0.…\n$ Depth              &lt;dbl&gt; 28.9, 18.8, 39.0, 7.1, 39.0, 7.2, 37.1, 5.2, 36.7, …\n$ Secchi             &lt;dbl&gt; 116, 30, 212, 52, 340, 48, 100, 40, 160, 44, 120, 6…\n$ Microcystis        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 3, 2, 3, 2, 4, 2, 3, 2, 2, 1, 1, …\n$ SpCndSurface       &lt;dbl&gt; 667, 15532, 647, 11369, 530, 16257, 503, 12946, 404…\n$ WTSurface          &lt;dbl&gt; 9.67, 9.97, 11.09, 12.51, 13.97, 13.81, 23.46, 21.1…\n\nnames(df_wq)\n\n [1] \"Station\"            \"Date\"               \"Chla\"              \n [4] \"Pheophytin\"         \"TotAlkalinity\"      \"DissAmmonia\"       \n [7] \"DissNitrateNitrite\" \"DOC\"                \"TOC\"               \n[10] \"DON\"                \"TotPhos\"            \"DissOrthophos\"     \n[13] \"TDS\"                \"TSS\"                \"TKN\"               \n[16] \"Depth\"              \"Secchi\"             \"Microcystis\"       \n[19] \"SpCndSurface\"       \"WTSurface\"         \n\n# 2019 data:\nglimpse(df_wq_2019)\n\nRows: 24\nColumns: 20\n$ Station            &lt;chr&gt; \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8…\n$ Date               &lt;date&gt; 2019-01-15, 2019-01-17, 2019-02-15, 2019-02-20, 20…\n$ Chla               &lt;dbl&gt; 0.84, 0.88, 2.29, 1.92, 2.60, 2.53, 1.59, 2.81, 1.0…\n$ Pheophytin         &lt;dbl&gt; 1.21, 0.64, 1.03, 2.32, 1.42, 1.35, 1.25, 1.19, 0.5…\n$ TotAlkalinity      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ DissAmmonia        &lt;dbl&gt; 0.200, 0.214, 0.090, 0.070, 0.050, 0.050, 0.050, 0.…\n$ DissNitrateNitrite &lt;dbl&gt; 3.600, 0.570, 1.030, 0.370, 0.540, 0.300, 0.420, 0.…\n$ DOC                &lt;dbl&gt; 6.00, 1.70, 6.10, 4.20, 3.60, 2.50, 2.60, 2.30, 2.2…\n$ TOC                &lt;dbl&gt; 6.00, 1.70, 5.60, 4.20, 3.60, 2.50, 2.60, 2.10, 2.2…\n$ DON                &lt;dbl&gt; 0.50, 0.10, 0.50, 0.30, 0.38, 0.20, 0.20, 0.16, 0.2…\n$ TotPhos            &lt;dbl&gt; 0.370, 0.094, 0.153, 0.180, 0.070, 0.080, 0.100, 0.…\n$ DissOrthophos      &lt;dbl&gt; 0.329, 0.092, 0.120, 0.071, 0.075, 0.065, 0.072, 0.…\n$ TDS                &lt;dbl&gt; 491, 8530, 160, 133, 112, 108, 109, 94, 118, 150, 5…\n$ TSS                &lt;dbl&gt; 12.0, 24.0, 17.0, 108.0, 6.0, 36.0, 27.0, 22.0, 4.0…\n$ TKN                &lt;dbl&gt; 0.800, 0.380, 0.700, 0.600, 0.400, 0.400, 0.300, 0.…\n$ Depth              &lt;dbl&gt; 38.7, 8.2, 17.0, 8.0, 36.7, 8.2, 39.0, 7.0, 37.8, 6…\n$ Secchi             &lt;dbl&gt; 100, 52, 44, 16, 76, 28, 92, 28, 100, 40, 80, 44, 1…\n$ Microcystis        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 4, …\n$ SpCndSurface       &lt;dbl&gt; 878, 14498, 276, 228, 194, 189, 195, 168, 214, 276,…\n$ WTSurface          &lt;dbl&gt; 10.03, 10.37, 10.87, 9.19, 12.12, 12.70, 14.26, 14.…\n\nnames(df_wq_2019)\n\n [1] \"Station\"            \"Date\"               \"Chla\"              \n [4] \"Pheophytin\"         \"TotAlkalinity\"      \"DissAmmonia\"       \n [7] \"DissNitrateNitrite\" \"DOC\"                \"TOC\"               \n[10] \"DON\"                \"TotPhos\"            \"DissOrthophos\"     \n[13] \"TDS\"                \"TSS\"                \"TKN\"               \n[16] \"Depth\"              \"Secchi\"             \"Microcystis\"       \n[19] \"SpCndSurface\"       \"WTSurface\"         \n\n\nAdd 2019 data to 2020-2022 data by binding rows:\n\ndf_wq_2019_2022 &lt;- bind_rows(df_wq_2019, df_wq)\ndf_wq_2019_2022\n\n# A tibble: 86 × 20\n   Station Date        Chla Pheophytin TotAlkalinity DissAmmonia\n   &lt;chr&gt;   &lt;date&gt;     &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;       &lt;dbl&gt;\n 1 P8      2019-01-15  0.84       1.21            NA       0.2  \n 2 D7      2019-01-17  0.88       0.64            NA       0.214\n 3 P8      2019-02-15  2.29       1.03            NA       0.09 \n 4 D7      2019-02-20  1.92       2.32            NA       0.07 \n 5 P8      2019-03-14  2.6        1.42            NA       0.05 \n 6 D7      2019-03-18  2.53       1.35            NA       0.05 \n 7 P8      2019-04-12  1.59       1.25            NA       0.05 \n 8 D7      2019-04-16  2.81       1.19            NA       0.05 \n 9 P8      2019-05-13  1.03       0.5             NA       0.05 \n10 D7      2019-05-15  2.1        0.69            NA       0.05 \n# ℹ 76 more rows\n# ℹ 14 more variables: DissNitrateNitrite &lt;dbl&gt;, DOC &lt;dbl&gt;, TOC &lt;dbl&gt;,\n#   DON &lt;dbl&gt;, TotPhos &lt;dbl&gt;, DissOrthophos &lt;dbl&gt;, TDS &lt;dbl&gt;, TSS &lt;dbl&gt;,\n#   TKN &lt;dbl&gt;, Depth &lt;dbl&gt;, Secchi &lt;dbl&gt;, Microcystis &lt;dbl&gt;,\n#   SpCndSurface &lt;dbl&gt;, WTSurface &lt;dbl&gt;\n\n\n\n4.2.1 Exercise\nAdd data collected from 2019-2022 at C3A to dataframe with P8 and D7",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Joins and Binds</span>"
    ]
  },
  {
    "objectID": "code/Day4_04_Joins&Binds.html#join-basics",
    "href": "code/Day4_04_Joins&Binds.html#join-basics",
    "title": "\n4  Joins and Binds\n",
    "section": "\n4.3 Join basics",
    "text": "4.3 Join basics",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Joins and Binds</span>"
    ]
  },
  {
    "objectID": "code/Day4_04_Joins&Binds.html#left-join",
    "href": "code/Day4_04_Joins&Binds.html#left-join",
    "title": "\n4  Joins and Binds\n",
    "section": "\n4.4 Left join",
    "text": "4.4 Left join\nJoin Delta inflow and outflow data from DayFlow to WQ data\n\n# Import Delta inflow and outflow data\ndf_dayflow &lt;- read_csv(here(\"data/Dayflow_2019_2023.csv\"))\n\n# Join Delta flow data to 2019-2022 WQ data\ndf_wq_flow &lt;- left_join(df_wq_2019_2022, df_dayflow)\nglimpse(df_wq_flow)\n\nRows: 86\nColumns: 22\n$ Station            &lt;chr&gt; \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8\", \"D7\", \"P8…\n$ Date               &lt;date&gt; 2019-01-15, 2019-01-17, 2019-02-15, 2019-02-20, 20…\n$ Chla               &lt;dbl&gt; 0.84, 0.88, 2.29, 1.92, 2.60, 2.53, 1.59, 2.81, 1.0…\n$ Pheophytin         &lt;dbl&gt; 1.21, 0.64, 1.03, 2.32, 1.42, 1.35, 1.25, 1.19, 0.5…\n$ TotAlkalinity      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ DissAmmonia        &lt;dbl&gt; 0.200, 0.214, 0.090, 0.070, 0.050, 0.050, 0.050, 0.…\n$ DissNitrateNitrite &lt;dbl&gt; 3.600, 0.570, 1.030, 0.370, 0.540, 0.300, 0.420, 0.…\n$ DOC                &lt;dbl&gt; 6.00, 1.70, 6.10, 4.20, 3.60, 2.50, 2.60, 2.30, 2.2…\n$ TOC                &lt;dbl&gt; 6.00, 1.70, 5.60, 4.20, 3.60, 2.50, 2.60, 2.10, 2.2…\n$ DON                &lt;dbl&gt; 0.50, 0.10, 0.50, 0.30, 0.38, 0.20, 0.20, 0.16, 0.2…\n$ TotPhos            &lt;dbl&gt; 0.370, 0.094, 0.153, 0.180, 0.070, 0.080, 0.100, 0.…\n$ DissOrthophos      &lt;dbl&gt; 0.329, 0.092, 0.120, 0.071, 0.075, 0.065, 0.072, 0.…\n$ TDS                &lt;dbl&gt; 491, 8530, 160, 133, 112, 108, 109, 94, 118, 150, 5…\n$ TSS                &lt;dbl&gt; 12.0, 24.0, 17.0, 108.0, 6.0, 36.0, 27.0, 22.0, 4.0…\n$ TKN                &lt;dbl&gt; 0.800, 0.380, 0.700, 0.600, 0.400, 0.400, 0.300, 0.…\n$ Depth              &lt;dbl&gt; 38.7, 8.2, 17.0, 8.0, 36.7, 8.2, 39.0, 7.0, 37.8, 6…\n$ Secchi             &lt;dbl&gt; 100, 52, 44, 16, 76, 28, 92, 28, 100, 40, 80, 44, 1…\n$ Microcystis        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 4, …\n$ SpCndSurface       &lt;dbl&gt; 878, 14498, 276, 228, 194, 189, 195, 168, 214, 276,…\n$ WTSurface          &lt;dbl&gt; 10.03, 10.37, 10.87, 9.19, 12.12, 12.70, 14.26, 14.…\n$ Inflow             &lt;dbl&gt; 27349, 42029, 129533, 107109, 129444, 105932, 10488…\n$ Outflow            &lt;dbl&gt; 21963, 42727, 130451, 95024, 121805, 97089, 100003,…\n\n\n\n4.4.1 Exercise\nAdd weather observation data to WQ data (2019-2022, P8, D7, and C3A)",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Joins and Binds</span>"
    ]
  },
  {
    "objectID": "code/Day4_05_Final_Exercise.html",
    "href": "code/Day4_05_Final_Exercise.html",
    "title": "5  Final Exercise",
    "section": "",
    "text": "5.1 Final Course Exercise\nMaybe have people work in pairs, Dave show solution at end (30 min)",
    "crumbs": [
      "Day 4 - Outline",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Final Exercise</span>"
    ]
  },
  {
    "objectID": "code/RDefinitions.html",
    "href": "code/RDefinitions.html",
    "title": "Appendix A — Definitions",
    "section": "",
    "text": "A.1 Definitions",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Definitions</span>"
    ]
  },
  {
    "objectID": "code/RDefinitions.html#definitions",
    "href": "code/RDefinitions.html#definitions",
    "title": "Appendix A — Definitions",
    "section": "",
    "text": "Argument- one of possibly several expressions that are passed to a function\nAssignment -\nComment: Text written in a script that is not treated as code to be run, but rather as text that describes what the code is doing. These are usually short notes, beginning with a #\nConsole - Place you run your code. It prints all the inputs and outputs - but then it’s gone!\nComprehensive R Archive Network (CRAN) - A public repository of R packages\nData frame - A two-dimensional data structure for storing tabular data in memory. Rows represent records and columns represent variables.\nEnvironment - A collection of functions, objects, and variables that are available for you to work with.\nFunction - A code block which gathers a sequence of operations into a whole, preserving it for ongoing use by defining a set of tasks that takes zero or more required and optional arguments as inputs and returns expected outputs (return values), if any. Functions enable repeating these defined tasks with one command, known as a function call.\nGUI - “Graphical User Interface” - anything you can point-and-click to get what you want. This is in contrast to the “command line” where you have to write out what you want.\nScript - Text file with code you want to run\nProject - Set of scripts, data, and outputs that are associated with a working directory and are related to each other using an .Proj file.\nPackage - A collection of code, data, and documentation that can be distributed and re-used. Also referred to in some languages as a library or module.\nPipe operator: The %&gt;% used to make the output of one function the input of the next. Piping works particularly well with Tidyverse packages.\nObject - A data set, a variable, plot, or more formally, almost everything in R. If it has a mode, it is an object. Includes data frames, vectors, matrices, arrays, lists and functions.\nTidyverse - A collection of R packages for operating on tabular data in consistent ways.\nVector - A list of items of the same type (e.g., a list of numbers or words).\nWorking directory - The folder that contains all the scripts and data you are working with.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Definitions</span>"
    ]
  },
  {
    "objectID": "index.html#ground-rules",
    "href": "index.html#ground-rules",
    "title": "Introduction to R Training - July 2024",
    "section": "Ground rules",
    "text": "Ground rules\n\nPlease participate fully in the class. You will get out of this class exactly as much as you put into it. This means not multi-tasking, completing the exercises, and asking questions when you get stuck.\nPlease come prepared. Install software ahead of time, have the link to this book on-hand, and review materials from the previous day before the next day’s class.\nDon’t be afraid to ask questions! Any coding language can be frustrating, so please speak up if you are having trouble. One of our teaching assistants can work with you 1:1 for major problems.",
    "crumbs": [
      "Intro to R for DWR"
    ]
  },
  {
    "objectID": "index.html#before-you-come-to-class",
    "href": "index.html#before-you-come-to-class",
    "title": "Introduction to R Training - July 2024",
    "section": "Before you come to class",
    "text": "Before you come to class\n\nInstall R Studio\nInstall R\nInstall the tidyverse packages\nInstall the here package\nOpen RStudio and make sure it runs.",
    "crumbs": [
      "Intro to R for DWR"
    ]
  },
  {
    "objectID": "index.html#meet-your-instructors",
    "href": "index.html#meet-your-instructors",
    "title": "Introduction to R Training - July 2024",
    "section": "Meet your instructors",
    "text": "Meet your instructors\n\nRosemary Hartman (She/Her) is an Environmental Program Manager in the Division of Integrated Science and Engineering. She is an aquatic ecologist by training, with an emphasis on data synthesis, statistics, and data integration. She would love to tell you how to analyze your data.\nPerry (They/Them) is an Environmental Scientist with the Environmental Monitoring Program who is also getting a master’s degree in statistics from UC Davis. They are fluent in both Python and R.\nNick Rasmussen (He/Him) is a Senior Environmental Scientist with broad interests in aquatic ecology who has worked on projects ranging from the Salinity Control Gates to aquatic weeds.\nDave Bosworth (He/Him) is a Senior Environmental Scientist who comes from a water quality and contaminants background but has found his calling as a data scientist. He is passionate about making your code more efficient and automating all the boring stuff.\nTed Swift (He/Him) is a Senior Environmental Scientist with the Quality Management Section who is working to increase the number of data science training available to DWR scientists.",
    "crumbs": [
      "Intro to R for DWR"
    ]
  }
]